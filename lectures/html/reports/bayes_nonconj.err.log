Traceback (most recent call last):
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/humphrey/anaconda3/envs/quantecon/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# truncated log normal
exampleLN = BayesianInference(param=(0,2), name_dist='lognormal', solver='numpyro')
exampleLN.show_prior(size=100000,bins=20)

# truncated uniform
exampleUN = BayesianInference(param=(0.1,0.8), name_dist='uniform', solver='numpyro')
exampleUN.show_prior(size=100000,bins=20)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mXlaRuntimeError[0m                           Traceback (most recent call last)
    [0;31m[... skipping hidden 1 frame][0m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/xla_bridge.py:982[0m, in [0;36m_init_backend[0;34m(platform)[0m
[1;32m    981[0m logger[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mInitializing backend [39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m"[39m, platform)
[0;32m--> 982[0m backend [38;5;241m=[39m [43mregistration[49m[38;5;241;43m.[39;49m[43mfactory[49m[43m([49m[43m)[49m
[1;32m    983[0m [38;5;66;03m# TODO(skye): consider raising more descriptive errors directly from backend[39;00m
[1;32m    984[0m [38;5;66;03m# factories instead of returning None.[39;00m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/xla_bridge.py:674[0m, in [0;36mregister_plugin.<locals>.factory[0;34m()[0m
[1;32m    673[0m [38;5;28;01mif[39;00m distributed[38;5;241m.[39mglobal_state[38;5;241m.[39mclient [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 674[0m   [38;5;28;01mreturn[39;00m [43mxla_client[49m[38;5;241;43m.[39;49m[43mmake_c_api_client[49m[43m([49m[43mplugin_name[49m[43m,[49m[43m [49m[43mupdated_options[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m    676[0m distribute_options [38;5;241m=[39m {
[1;32m    677[0m     [38;5;124m'[39m[38;5;124mnode_id[39m[38;5;124m'[39m: distributed[38;5;241m.[39mglobal_state[38;5;241m.[39mprocess_id,
[1;32m    678[0m     [38;5;124m'[39m[38;5;124mnum_nodes[39m[38;5;124m'[39m: distributed[38;5;241m.[39mglobal_state[38;5;241m.[39mnum_processes,
[1;32m    679[0m }

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jaxlib/xla_client.py:200[0m, in [0;36mmake_c_api_client[0;34m(plugin_name, options, distributed_client)[0m
[1;32m    199[0m   options [38;5;241m=[39m {}
[0;32m--> 200[0m [38;5;28;01mreturn[39;00m [43m_xla[49m[38;5;241;43m.[39;49m[43mget_c_api_client[49m[43m([49m[43mplugin_name[49m[43m,[49m[43m [49m[43moptions[49m[43m,[49m[43m [49m[43mdistributed_client[49m[43m)[49m

[0;31mXlaRuntimeError[0m: INTERNAL: no supported devices found for platform CUDA

During handling of the above exception, another exception occurred:

[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[6], line 2[0m
[1;32m      1[0m [38;5;66;03m# truncated log normal[39;00m
[0;32m----> 2[0m exampleLN [38;5;241m=[39m [43mBayesianInference[49m[43m([49m[43mparam[49m[38;5;241;43m=[39;49m[43m([49m[38;5;241;43m0[39;49m[43m,[49m[38;5;241;43m2[39;49m[43m)[49m[43m,[49m[43m [49m[43mname_dist[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mlognormal[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43msolver[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mnumpyro[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      3[0m exampleLN[38;5;241m.[39mshow_prior(size[38;5;241m=[39m[38;5;241m100000[39m,bins[38;5;241m=[39m[38;5;241m20[39m)
[1;32m      5[0m [38;5;66;03m# truncated uniform[39;00m

Cell [0;32mIn[5], line 18[0m, in [0;36mBayesianInference.__init__[0;34m(self, param, name_dist, solver)[0m
[1;32m     15[0m [38;5;28mself[39m[38;5;241m.[39msolver [38;5;241m=[39m solver
[1;32m     17[0m [38;5;66;03m# jax requires explicit PRNG state to be passed[39;00m
[0;32m---> 18[0m [38;5;28mself[39m[38;5;241m.[39mrng_key [38;5;241m=[39m [43mrandom[49m[38;5;241;43m.[39;49m[43mPRNGKey[49m[43m([49m[38;5;241;43m0[39;49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/random.py:248[0m, in [0;36mPRNGKey[0;34m(seed, impl)[0m
[1;32m    222[0m [38;5;28;01mdef[39;00m [38;5;21mPRNGKey[39m(seed: [38;5;28mint[39m [38;5;241m|[39m ArrayLike, [38;5;241m*[39m,
[1;32m    223[0m             impl: PRNGSpecDesc [38;5;241m|[39m [38;5;28;01mNone[39;00m [38;5;241m=[39m [38;5;28;01mNone[39;00m) [38;5;241m-[39m[38;5;241m>[39m KeyArray:
[1;32m    224[0m [38;5;250m  [39m[38;5;124;03m"""Create a legacy PRNG key given an integer seed.[39;00m
[1;32m    225[0m 
[1;32m    226[0m [38;5;124;03m  This function produces old-style legacy PRNG keys, which are arrays[39;00m
[0;32m   (...)[0m
[1;32m    246[0m [38;5;124;03m    and ``fold_in``.[39;00m
[1;32m    247[0m [38;5;124;03m  """[39;00m
[0;32m--> 248[0m   [38;5;28;01mreturn[39;00m _return_prng_keys([38;5;28;01mTrue[39;00m, [43m_key[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mPRNGKey[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mseed[49m[43m,[49m[43m [49m[43mimpl[49m[43m)[49m)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/random.py:200[0m, in [0;36m_key[0;34m(ctor_name, seed, impl_spec)[0m
[1;32m    196[0m [38;5;28;01mif[39;00m np[38;5;241m.[39mndim(seed):
[1;32m    197[0m   [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(
[1;32m    198[0m       [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mctor_name[38;5;132;01m}[39;00m[38;5;124m accepts a scalar seed, but was given an array of [39m[38;5;124m"[39m
[1;32m    199[0m       [38;5;124mf[39m[38;5;124m"[39m[38;5;124mshape [39m[38;5;132;01m{[39;00mnp[38;5;241m.[39mshape(seed)[38;5;132;01m}[39;00m[38;5;124m != (). Use jax.vmap for batching[39m[38;5;124m"[39m)
[0;32m--> 200[0m [38;5;28;01mreturn[39;00m [43mprng[49m[38;5;241;43m.[39;49m[43mrandom_seed[49m[43m([49m[43mseed[49m[43m,[49m[43m [49m[43mimpl[49m[38;5;241;43m=[39;49m[43mimpl[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/prng.py:530[0m, in [0;36mrandom_seed[0;34m(seeds, impl)[0m
[1;32m    525[0m [38;5;28;01mdef[39;00m [38;5;21mrandom_seed[39m(seeds: [38;5;28mint[39m [38;5;241m|[39m typing[38;5;241m.[39mArrayLike, impl: PRNGImpl) [38;5;241m-[39m[38;5;241m>[39m PRNGKeyArray:
[1;32m    526[0m   [38;5;66;03m# Avoid overflow error in X32 mode by first converting ints to int64.[39;00m
[1;32m    527[0m   [38;5;66;03m# This breaks JIT invariance for large ints, but supports the common[39;00m
[1;32m    528[0m   [38;5;66;03m# use-case of instantiating with Python hashes in X32 mode.[39;00m
[1;32m    529[0m   [38;5;28;01mif[39;00m [38;5;28misinstance[39m(seeds, [38;5;28mint[39m):
[0;32m--> 530[0m     seeds_arr [38;5;241m=[39m [43mjnp[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43mnp[49m[38;5;241;43m.[39;49m[43mint64[49m[43m([49m[43mseeds[49m[43m)[49m[43m)[49m
[1;32m    531[0m   [38;5;28;01melse[39;00m:
[1;32m    532[0m     seeds_arr [38;5;241m=[39m jnp[38;5;241m.[39masarray(seeds)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/numpy/lax_numpy.py:5592[0m, in [0;36masarray[0;34m(a, dtype, order, copy, device)[0m
[1;32m   5590[0m [38;5;28;01mif[39;00m dtype [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   5591[0m   dtype [38;5;241m=[39m dtypes[38;5;241m.[39mcanonicalize_dtype(dtype, allow_extended_dtype[38;5;241m=[39m[38;5;28;01mTrue[39;00m)  [38;5;66;03m# type: ignore[assignment][39;00m
[0;32m-> 5592[0m [38;5;28;01mreturn[39;00m [43marray[49m[43m([49m[43ma[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mcopy[49m[38;5;241;43m=[39;49m[38;5;28;43mbool[39;49m[43m([49m[43mcopy[49m[43m)[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdevice[49m[38;5;241;43m=[39;49m[43mdevice[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/numpy/lax_numpy.py:5426[0m, in [0;36marray[0;34m(object, dtype, copy, order, ndmin, device)[0m
[1;32m   5424[0m [38;5;28;01melse[39;00m:
[1;32m   5425[0m   [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mUnexpected input type for array: [39m[38;5;132;01m{[39;00m[38;5;28mtype[39m([38;5;28mobject[39m)[38;5;132;01m}[39;00m[38;5;124m"[39m)
[0;32m-> 5426[0m out_array: Array [38;5;241m=[39m [43mlax_internal[49m[38;5;241;43m.[39;49m[43m_convert_element_type[49m[43m([49m
[1;32m   5427[0m [43m    [49m[43mout[49m[43m,[49m[43m [49m[43mdtype[49m[43m,[49m[43m [49m[43mweak_type[49m[38;5;241;43m=[39;49m[43mweak_type[49m[43m,[49m[43m [49m[43msharding[49m[38;5;241;43m=[39;49m[43msharding[49m[43m)[49m
[1;32m   5428[0m [38;5;28;01mif[39;00m ndmin [38;5;241m>[39m ndim(out_array):
[1;32m   5429[0m   out_array [38;5;241m=[39m lax[38;5;241m.[39mexpand_dims(out_array, [38;5;28mrange[39m(ndmin [38;5;241m-[39m ndim(out_array)))

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/lax/lax.py:587[0m, in [0;36m_convert_element_type[0;34m(operand, new_dtype, weak_type, sharding)[0m
[1;32m    585[0m   [38;5;28;01mreturn[39;00m operand
[1;32m    586[0m [38;5;28;01melse[39;00m:
[0;32m--> 587[0m   [38;5;28;01mreturn[39;00m [43mconvert_element_type_p[49m[38;5;241;43m.[39;49m[43mbind[49m[43m([49m
[1;32m    588[0m [43m      [49m[43moperand[49m[43m,[49m[43m [49m[43mnew_dtype[49m[38;5;241;43m=[39;49m[43mnew_dtype[49m[43m,[49m[43m [49m[43mweak_type[49m[38;5;241;43m=[39;49m[38;5;28;43mbool[39;49m[43m([49m[43mweak_type[49m[43m)[49m[43m,[49m
[1;32m    589[0m [43m      [49m[43msharding[49m[38;5;241;43m=[39;49m[43msharding[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/lax/lax.py:2981[0m, in [0;36m_convert_element_type_bind[0;34m(operand, new_dtype, weak_type, sharding)[0m
[1;32m   2980[0m [38;5;28;01mdef[39;00m [38;5;21m_convert_element_type_bind[39m(operand, [38;5;241m*[39m, new_dtype, weak_type, sharding):
[0;32m-> 2981[0m   operand [38;5;241m=[39m [43mcore[49m[38;5;241;43m.[39;49m[43mPrimitive[49m[38;5;241;43m.[39;49m[43mbind[49m[43m([49m[43mconvert_element_type_p[49m[43m,[49m[43m [49m[43moperand[49m[43m,[49m
[1;32m   2982[0m [43m                                [49m[43mnew_dtype[49m[38;5;241;43m=[39;49m[43mnew_dtype[49m[43m,[49m[43m [49m[43mweak_type[49m[38;5;241;43m=[39;49m[43mweak_type[49m[43m,[49m
[1;32m   2983[0m [43m                                [49m[43msharding[49m[38;5;241;43m=[39;49m[43msharding[49m[43m)[49m
[1;32m   2984[0m   [38;5;28;01mif[39;00m sharding [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   2985[0m     operand [38;5;241m=[39m pjit[38;5;241m.[39mwith_sharding_constraint(operand, sharding)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/core.py:438[0m, in [0;36mPrimitive.bind[0;34m(self, *args, **params)[0m
[1;32m    435[0m [38;5;28;01mdef[39;00m [38;5;21mbind[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mparams):
[1;32m    436[0m   [38;5;28;01massert[39;00m ([38;5;129;01mnot[39;00m config[38;5;241m.[39menable_checks[38;5;241m.[39mvalue [38;5;129;01mor[39;00m
[1;32m    437[0m           [38;5;28mall[39m([38;5;28misinstance[39m(arg, Tracer) [38;5;129;01mor[39;00m valid_jaxtype(arg) [38;5;28;01mfor[39;00m arg [38;5;129;01min[39;00m args)), args
[0;32m--> 438[0m   [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mbind_with_trace[49m[43m([49m[43mfind_top_trace[49m[43m([49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[43margs[49m[43m,[49m[43m [49m[43mparams[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/core.py:442[0m, in [0;36mPrimitive.bind_with_trace[0;34m(self, trace, args, params)[0m
[1;32m    440[0m [38;5;28;01mdef[39;00m [38;5;21mbind_with_trace[39m([38;5;28mself[39m, trace, args, params):
[1;32m    441[0m   [38;5;28;01mwith[39;00m pop_level(trace[38;5;241m.[39mlevel):
[0;32m--> 442[0m     out [38;5;241m=[39m [43mtrace[49m[38;5;241;43m.[39;49m[43mprocess_primitive[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;28;43mmap[39;49m[43m([49m[43mtrace[49m[38;5;241;43m.[39;49m[43mfull_raise[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[43mparams[49m[43m)[49m
[1;32m    443[0m   [38;5;28;01mreturn[39;00m [38;5;28mmap[39m(full_lower, out) [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmultiple_results [38;5;28;01melse[39;00m full_lower(out)

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/core.py:955[0m, in [0;36mEvalTrace.process_primitive[0;34m(self, primitive, tracers, params)[0m
[1;32m    953[0m   [38;5;28;01mreturn[39;00m call_impl_with_key_reuse_checks(primitive, primitive[38;5;241m.[39mimpl, [38;5;241m*[39mtracers, [38;5;241m*[39m[38;5;241m*[39mparams)
[1;32m    954[0m [38;5;28;01melse[39;00m:
[0;32m--> 955[0m   [38;5;28;01mreturn[39;00m [43mprimitive[49m[38;5;241;43m.[39;49m[43mimpl[49m[43m([49m[38;5;241;43m*[39;49m[43mtracers[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mparams[49m[43m)[49m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/dispatch.py:91[0m, in [0;36mapply_primitive[0;34m(prim, *args, **params)[0m
[1;32m     89[0m prev [38;5;241m=[39m lib[38;5;241m.[39mjax_jit[38;5;241m.[39mswap_thread_local_state_disable_jit([38;5;28;01mFalse[39;00m)
[1;32m     90[0m [38;5;28;01mtry[39;00m:
[0;32m---> 91[0m   outs [38;5;241m=[39m [43mfun[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m     92[0m [38;5;28;01mfinally[39;00m:
[1;32m     93[0m   lib[38;5;241m.[39mjax_jit[38;5;241m.[39mswap_thread_local_state_disable_jit(prev)

    [0;31m[... skipping hidden 19 frame][0m

File [0;32m~/anaconda3/envs/quantecon/lib/python3.10/site-packages/jax/_src/xla_bridge.py:912[0m, in [0;36mbackends[0;34m()[0m
[1;32m    910[0m       [38;5;28;01melse[39;00m:
[1;32m    911[0m         err_msg [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;124m (you may need to uninstall the failing plugin package, or set JAX_PLATFORMS=cpu to skip this backend.)[39m[38;5;124m"[39m
[0;32m--> 912[0m       [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(err_msg)
[1;32m    914[0m [38;5;28;01massert[39;00m _default_backend [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[1;32m    915[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m config[38;5;241m.[39mjax_platforms[38;5;241m.[39mvalue:

[0;31mRuntimeError[0m: Unable to initialize backend 'cuda': INTERNAL: no supported devices found for platform CUDA (you may need to uninstall the failing plugin package, or set JAX_PLATFORMS=cpu to skip this backend.)
RuntimeError: Unable to initialize backend 'cuda': INTERNAL: no supported devices found for platform CUDA (you may need to uninstall the failing plugin package, or set JAX_PLATFORMS=cpu to skip this backend.)

